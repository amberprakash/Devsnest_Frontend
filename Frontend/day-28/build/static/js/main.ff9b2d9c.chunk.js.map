{"version":3,"sources":["App.js","index.js"],"names":["App","useState","place","setPlace","placeData","setPlaceData","className","type","value","onChange","e","target","onClick","fetch","then","res","json","data","location","src","current","condition","icon","temp_c","text","name","wind_kph","humidity","precip_in","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAiEeA,MA7Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KASA,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBAAOC,KAAK,OAAOC,MAAON,EAAOO,SAAU,SAACC,GAC1CP,EAASO,EAAEC,OAAOH,UAEpB,wBAAQF,UAAU,kBAAkBM,QAhBtB,WACtBC,MAAM,oFAAD,OAAqFX,IACvFY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJZ,EAAaY,OAYT,uBAEF,qBAAKX,UAAU,sCAAf,SACE,qBAAKA,UAAU,OAAf,SACGF,EAAUc,SACT,gCACE,qBAAKC,IAAKf,EAAUgB,QAAQC,UAAUC,OACtC,sBAAKhB,UAAU,OAAf,UAAuBF,EAAUgB,QAAQG,OAAzC,UACA,qBAAKjB,UAAU,OAAf,SAAuBF,EAAUgB,QAAQC,UAAUG,OACnD,qBAAKlB,UAAU,QAAf,SAAwBF,EAAUc,SAASO,OAC3C,qBAAKnB,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,sBACA,sBAAKA,UAAU,OAAf,UACGF,EAAUgB,QAAQM,SAAS,sBAAMpB,UAAU,OAAhB,sBAEhC,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,sBACA,sBAAKA,UAAU,OAAf,UACCF,EAAUgB,QAAQO,SAAS,sBAAMrB,UAAU,OAAhB,qBAE9B,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,2BACA,sBAAKA,UAAU,OAAf,UACCF,EAAUgB,QAAQQ,UAAU,sBAAMtB,UAAU,OAAhB,6BAQnC,6DClDlBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ff9b2d9c.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [place, setPlace] = useState(\"\");\n  const [placeData, setPlaceData] = useState({});\n  const updatePlaceData = () => {\n    fetch(`https://api.weatherapi.com/v1/current.json?key=ebf9e31012374671a0c172826211509&q=${place}`)\n      .then(res => res.json())\n      .then(data => {\n        setPlaceData(data);\n      });\n\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 form\">\n            <input type=\"text\" value={place} onChange={(e) => {\n              setPlace(e.target.value);\n            }} />\n            <button className=\"btn btn-primary\" onClick={updatePlaceData}>Submit</button>\n          </div>\n          <div className=\"offset-md-4 col-12 col-md-4 weather\">\n            <div className=\"card\">\n              {placeData.location ? (\n                <div>\n                  <img src={placeData.current.condition.icon} />\n                  <div className=\"temp\">{placeData.current.temp_c}Â°</div>\n                  <div className=\"desc\">{placeData.current.condition.text}</div>\n                  <div className=\"place\">{placeData.location.name}</div>\n                  <div className=\"container\">\n                    <div className=\"row whp\">\n                      <div className=\"col\">\n                        <div className=\"titile\">Wind Now</div>\n                        <div className=\"data\">\n                          {placeData.current.wind_kph}<spna className=\"unit\">KM</spna></div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"titile\">Humidity</div>\n                        <div className=\"data\">\n                        {placeData.current.humidity}<spna className=\"unit\">%</spna></div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"titile\">Precipitation</div>\n                        <div className=\"data\">\n                        {placeData.current.precip_in}<spna className=\"unit\">%</spna></div>\n                      </div>\n                    </div>\n                  </div>\n\n\n\n                </div>\n              ) : <h2>Place Not Found</h2>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}